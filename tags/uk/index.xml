<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>UK on Line Ton That</title>
    <link>https://linetonthat.com/tags/uk/</link>
    <description>Recent content in UK on Line Ton That</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Oct 2023 21:33:52 +0200</lastBuildDate><atom:link href="https://linetonthat.com/tags/uk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Applying scrollytelling</title>
      <link>https://linetonthat.com/post/bkp_scrollytelling-uk-rainfall/</link>
      <pubDate>Fri, 20 Oct 2023 21:33:52 +0200</pubDate>
      
      <guid>https://linetonthat.com/post/bkp_scrollytelling-uk-rainfall/</guid>
      <description>Scrollytelling has been on my wishlist for some time. I love this method as it allows guiding the reader step by step through the narrative, using annotations and animations. I actually submitted it to the Storytelling with Data Challenge &amp;ldquo;annotate it!&amp;rdquo; . To test out the technique, I chose to reimagine a data visualization that was mostly static. Here is the summary: The result See the scrollytelling version here. NB: This version is best viewed on a desktop computer (or at least on a screen 1100 pixels wide).</description>
    </item>
    
    <item>
      <title>My first scrollytelling project</title>
      <link>https://linetonthat.com/post/scrollytelling-uk-rainfall/</link>
      <pubDate>Fri, 20 Oct 2023 09:28:00 +0200</pubDate>
      
      <guid>https://linetonthat.com/post/scrollytelling-uk-rainfall/</guid>
      <description>Context Scrollytelling had been on my wishlist for some time. I love this method as it allows guiding the reader step by step through the narrative, using annotations and animations. I&amp;rsquo;ve also submitted it to this month&amp;rsquo;s Storytelling with Data Challenge &amp;ldquo;annotate it!&amp;rdquo; . To test out the technique, I chose to reimagine a data visualization that was mostly static. Here is its summary: The result See the complete scrollytelling version here.</description>
    </item>
    
  </channel>
</rss>
